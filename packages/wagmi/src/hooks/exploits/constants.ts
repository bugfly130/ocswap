import { ChainId } from 'sushi/chain'
import { Address } from 'wagmi'
import { z } from 'zod'

import Rp2MerkleTreeBSC from './data/bsc-tree.json'
import Rp2MerkleTreeEthereum from './data/ethereum-tree.json'
import { RP2ClaimChainId } from './types'

export const RP2ClaimAddress = {
  [ChainId.BSC]: '0x4cFe5Ee193075C7e9FAD102cE87AEa5EF2025B6b',
  [ChainId.ETHEREUM]: '0x049E1C6b35cD02d1fb2c62325A5FE9eA7E3Bc96C',
}

export const RP2MerkleTree = {
  [ChainId.BSC]: Rp2MerkleTreeBSC,
  [ChainId.ETHEREUM]: Rp2MerkleTreeEthereum,
}

export const RP2MerkleTreeClaimSchema = z.object({
  user: z.string().transform((el) => el as Address),
  index: z.number(),
  amount: z.object({
    hex: z.string(),
  }),
  token: z.string().transform((el) => el as Address),
  proof: z.array(z.string()).transform((el) => el as Address[]),
})

export const RP2MerkleTreeSchema = z.object({
  merkleRoot: z.string(),
  claims: z.array(RP2MerkleTreeClaimSchema),
})

export const RP2ClaimChainIds = Object.keys(RP2ClaimAddress).map(
  (el) => +el as RP2ClaimChainId,
) as RP2ClaimChainId[]
